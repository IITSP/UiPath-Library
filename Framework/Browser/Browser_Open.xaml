<Activity mc:Ignorable="sap sap2010" x:Class="Sequence" this:Sequence.URL="https://www.google.com" this:Sequence.BrowserType="[BrowserName.IE]" this:Sequence.InBackground="False" this:Sequence.NewSession="True" this:Sequence.TimeToWait="35" this:Sequence.Selector="&lt;webctrl tag='BODY' /&gt;" xmlns="http://schemas.microsoft.com/netfx/2009/xaml/activities" xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" xmlns:mva="clr-namespace:Microsoft.VisualBasic.Activities;assembly=System.Activities" xmlns:s="clr-namespace:System;assembly=mscorlib" xmlns:sap="http://schemas.microsoft.com/netfx/2009/xaml/activities/presentation" xmlns:sap2010="http://schemas.microsoft.com/netfx/2010/xaml/activities/presentation" xmlns:scg="clr-namespace:System.Collections.Generic;assembly=mscorlib" xmlns:sco="clr-namespace:System.Collections.ObjectModel;assembly=mscorlib" xmlns:this="clr-namespace:" xmlns:ui="http://schemas.uipath.com/workflow/activities" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
  <x:Members>
    <x:Property Name="URL" Type="InArgument(x:String)" />
    <x:Property Name="BrowserType" Type="InArgument(ui:BrowserName)" />
    <x:Property Name="InBackground" Type="InArgument(x:Boolean)" />
    <x:Property Name="NewSession" Type="InArgument(x:Boolean)" />
    <x:Property Name="Process" Type="OutArgument(ui:Browser)" />
    <x:Property Name="TimeToWait" Type="InArgument(x:Int32)" />
    <x:Property Name="Selector" Type="InArgument(x:String)" />
  </x:Members>
  <mva:VisualBasic.Settings>
    <x:Null />
  </mva:VisualBasic.Settings>
  <sap:VirtualizedContainerService.HintSize>480,829</sap:VirtualizedContainerService.HintSize>
  <sap2010:WorkflowViewState.IdRef>Sequence_1</sap2010:WorkflowViewState.IdRef>
  <TextExpression.NamespacesForImplementation>
    <sco:Collection x:TypeArguments="x:String">
      <x:String>System.Activities</x:String>
      <x:String>System.Activities.Statements</x:String>
      <x:String>System.Activities.Expressions</x:String>
      <x:String>System.Activities.Validation</x:String>
      <x:String>System.Activities.XamlIntegration</x:String>
      <x:String>Microsoft.VisualBasic</x:String>
      <x:String>Microsoft.VisualBasic.Activities</x:String>
      <x:String>System</x:String>
      <x:String>System.Collections</x:String>
      <x:String>System.Collections.Generic</x:String>
      <x:String>System.Data</x:String>
      <x:String>System.Diagnostics</x:String>
      <x:String>System.Drawing</x:String>
      <x:String>System.IO</x:String>
      <x:String>System.Linq</x:String>
      <x:String>System.Net.Mail</x:String>
      <x:String>System.Xml</x:String>
      <x:String>System.Xml.Linq</x:String>
      <x:String>UiPath.Core</x:String>
      <x:String>UiPath.Core.Activities</x:String>
      <x:String>System.Windows.Markup</x:String>
      <x:String>Microsoft.VisualBasic.CompilerServices</x:String>
    </sco:Collection>
  </TextExpression.NamespacesForImplementation>
  <TextExpression.ReferencesForImplementation>
    <sco:Collection x:TypeArguments="AssemblyReference">
      <AssemblyReference>System.Activities</AssemblyReference>
      <AssemblyReference>Microsoft.VisualBasic</AssemblyReference>
      <AssemblyReference>mscorlib</AssemblyReference>
      <AssemblyReference>System.Data</AssemblyReference>
      <AssemblyReference>System.Data.DataSetExtensions</AssemblyReference>
      <AssemblyReference>System</AssemblyReference>
      <AssemblyReference>System.Drawing</AssemblyReference>
      <AssemblyReference>System.Core</AssemblyReference>
      <AssemblyReference>System.Xml</AssemblyReference>
      <AssemblyReference>System.Xml.Linq</AssemblyReference>
      <AssemblyReference>PresentationFramework</AssemblyReference>
      <AssemblyReference>WindowsBase</AssemblyReference>
      <AssemblyReference>PresentationCore</AssemblyReference>
      <AssemblyReference>System.Xaml</AssemblyReference>
      <AssemblyReference>UiPath.System.Activities</AssemblyReference>
      <AssemblyReference>UiPath.UiAutomation.Activities</AssemblyReference>
      <AssemblyReference>System.ServiceModel</AssemblyReference>
      <AssemblyReference>UiPath.Excel</AssemblyReference>
      <AssemblyReference>System.ComponentModel.Composition</AssemblyReference>
    </sco:Collection>
  </TextExpression.ReferencesForImplementation>
  <Sequence sap2010:Annotation.AnnotationText="Browser_Open &#xA;allow control  parameters  for standard Open Browser Activity &#xA;Parameter  (Default value ) &#xA;URL - url to open  ( &quot;https://www.google.com&quot; )&#xA;BrowserType - Enumemerable  UiPath.Core.BrowserName ( UiPath.Core.BrowserName.IE)&#xA;InBackground  - Open Browser in background  ( Boolean False )&#xA;NewSession     -Open New session ( Boolean True) &#xA;Timeout  - Time out in Seconds wait for complete operation ( int 30 ) &#xA;&#xA;Return &#xA;Process  - type Browser  with opened Browser reference for use &#xA;" DisplayName="Browser_open" sap:VirtualizedContainerService.HintSize="440,749" sap2010:WorkflowViewState.IdRef="Sequence_4">
    <sap:WorkflowViewStateService.ViewState>
      <scg:Dictionary x:TypeArguments="x:String, x:Object">
        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
        <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
      </scg:Dictionary>
    </sap:WorkflowViewStateService.ViewState>
    <TryCatch DisplayName="Try Catch any errors" sap:VirtualizedContainerService.HintSize="418,287" sap2010:WorkflowViewState.IdRef="TryCatch_1">
      <TryCatch.Variables>
        <Variable x:TypeArguments="x:String" Default="&lt;BODY /&gt;" Name="Selector" />
      </TryCatch.Variables>
      <sap:WorkflowViewStateService.ViewState>
        <scg:Dictionary x:TypeArguments="x:String, x:Object">
          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          <x:Boolean x:Key="IsPinned">False</x:Boolean>
        </scg:Dictionary>
      </sap:WorkflowViewStateService.ViewState>
      <TryCatch.Try>
        <ui:InvokeCode ContinueOnError="{x:Null}" Code="Dim activity As New UiPath.Core.Activities.OpenBrowser&#xD;&#xA;Dim inArg As  Dictionary(Of String, Object) = New Dictionary(Of String, Object)&#xD;&#xA;Dim OuArg As  iDictionary(Of String, Object) &#xD;&#xA;Dim timesp As System.Timespan &#xD;&#xA;timesp=New System.Timespan(TimeToWait*System.TimeSpan.TicksPerSecond)&#xD;&#xA;&#xD;&#xA;Try&#xD;&#xA;&#x9;inArg.Add(&quot;Url&quot;,AppUrl)&#xD;&#xA;&#x9;activity.BrowserType = BrowserType&#xD;&#xA;&#x9;activity.Hidden      = OpeninBackground&#xD;&#xA;&#x9;activity.NewSession  = NewSession&#xD;&#xA;&#x9;activity.DisplayName = &quot;Open Browser &quot; + BrowserType.ToString&#xD;&#xA;&#x9;OuArg=WorkflowInvoker.Invoke(activity,inArg,timesp )&#xD;&#xA;'&#x9;OuArg=WorkflowInvoker.Invoke(activity,inArg)&#xD;&#xA;&#x9;Process=CType(OuArg(&quot;UiBrowser&quot;),UiPath.Core.Browser)&#xD;&#xA;Catch ex As Exception&#xD;&#xA;&#x9;'Console.WriteLine(ex.Message)&#xD;&#xA;&#x9;'Console.WriteLine(ex.InnerException.Message)&#xD;&#xA;&#x9;Throw New ApplicationException(&quot; Browser_open :&quot;+ex.InnerException.Message)&#xD;&#xA;Finally&#xD;&#xA;&#x9;'Console.WriteLine(activity.DisplayName+&quot; completed&quot;)&#xD;&#xA;End Try" DisplayName="Invoke Open Browser Activity" sap:VirtualizedContainerService.HintSize="314,164" sap2010:WorkflowViewState.IdRef="InvokeCode_1">
          <ui:InvokeCode.Arguments>
            <InArgument x:TypeArguments="x:String" x:Key="AppUrl">[URL]</InArgument>
            <InArgument x:TypeArguments="ui:BrowserName" x:Key="BrowserType">[BrowserType]</InArgument>
            <InArgument x:TypeArguments="x:Boolean" x:Key="OpeninBackground">[InBackground]</InArgument>
            <OutArgument x:TypeArguments="ui:Browser" x:Key="Process">[Process]</OutArgument>
            <InArgument x:TypeArguments="x:Boolean" x:Key="NewSession">[NewSession]</InArgument>
            <InArgument x:TypeArguments="x:Int32" x:Key="TimeToWait">[TimeToWait]</InArgument>
          </ui:InvokeCode.Arguments>
          <sap:WorkflowViewStateService.ViewState>
            <scg:Dictionary x:TypeArguments="x:String, x:Object">
              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
              <x:Boolean x:Key="IsPinned">False</x:Boolean>
            </scg:Dictionary>
          </sap:WorkflowViewStateService.ViewState>
        </ui:InvokeCode>
      </TryCatch.Try>
      <TryCatch.Catches>
        <Catch x:TypeArguments="s:Exception" sap:VirtualizedContainerService.HintSize="404,21" sap2010:WorkflowViewState.IdRef="Catch`1_1">
          <sap:WorkflowViewStateService.ViewState>
            <scg:Dictionary x:TypeArguments="x:String, x:Object">
              <x:Boolean x:Key="IsExpanded">False</x:Boolean>
              <x:Boolean x:Key="IsPinned">False</x:Boolean>
            </scg:Dictionary>
          </sap:WorkflowViewStateService.ViewState>
          <ActivityAction x:TypeArguments="s:Exception">
            <ActivityAction.Argument>
              <DelegateInArgument x:TypeArguments="s:Exception" Name="exception" />
            </ActivityAction.Argument>
            <ui:InvokeWorkflowFile ContinueOnError="{x:Null}" DisplayName="Invoke App_Exception workflow" sap:VirtualizedContainerService.HintSize="314,87" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_1" UnSafe="False" WorkflowFileName="App_Exception.xaml">
              <ui:InvokeWorkflowFile.Arguments>
                <InArgument x:TypeArguments="x:String" x:Key="Message">["Unable open Browser &lt;"+BrowserType.ToString+"&gt; &lt; "+URL+"&gt; "+exception.InnerException.Message]</InArgument>
              </ui:InvokeWorkflowFile.Arguments>
            </ui:InvokeWorkflowFile>
          </ActivityAction>
        </Catch>
      </TryCatch.Catches>
    </TryCatch>
    <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="418,91" sap2010:WorkflowViewState.IdRef="LogMessage_1" Level="Trace" Message="[&quot;Browser  &lt;&quot;+BrowserType.ToString+&quot;&gt; Opened&quot;]" />
  </Sequence>
</Activity>